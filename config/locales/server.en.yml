en:
  site_settings:
    discourse_ai_enabled: "Enable the discourse AI plugin."
    ai_toxicity_enabled: "Enable the toxicity module."
    ai_toxicity_inference_service_api_endpoint: "URL where the API is running for the toxicity module"
    ai_toxicity_inference_service_api_key: "API key for the toxicity API"
    ai_toxicity_inference_service_api_model: "Model to use for inference. Multilingual model works with Italian, French, Russian, Portuguese, Spanish and Turkish."
    ai_toxicity_flag_automatically: "Automatically flag posts / chat messages that are above the configured thresholds."
    ai_toxicity_flag_threshold_toxicity: "Toxicity: a rude, disrespectful, or unreasonable comment that is somewhat likely to make you leave a discussion or give up on sharing your perspective"
    ai_toxicity_flag_threshold_severe_toxicity: "Severe Toxicity: a very hateful, aggressive, or disrespectful comment that is very likely to make you leave a discussion or give up on sharing your perspective"
    ai_toxicity_flag_threshold_obscene: "Obscene"
    ai_toxicity_flag_threshold_identity_attack: "Identity Attack"
    ai_toxicity_flag_threshold_insult: "Insult"
    ai_toxicity_flag_threshold_threat: "Threat"
    ai_toxicity_flag_threshold_sexual_explicit: "Sexual Explicit"
    ai_toxicity_groups_bypass: "Users on those groups will not have their posts classified by the toxicity module."

    ai_sentiment_enabled: "Enable the sentiment module."
    ai_sentiment_inference_service_api_endpoint: "URL where the API is running for the sentiment module"
    ai_sentiment_inference_service_api_key: "API key for the sentiment API"
    ai_sentiment_models: "Models to use for inference. Sentiment classifies post on the positive/neutral/negative space. Emotion classifies on the anger/disgust/fear/joy/neutral/sadness/surprise space."

    ai_nsfw_detection_enabled: "Enable the NSFW module."
    ai_nsfw_inference_service_api_endpoint:  "URL where the API is running for the NSFW module"
    ai_nsfw_inference_service_api_key: "API key for the NSFW API"
    ai_nsfw_flag_automatically: "Automatically flag NSFW posts that are above the configured thresholds."
    ai_nsfw_flag_threshold_general: "General Threshold for an image to be considered NSFW."
    ai_nsfw_flag_threshold_drawings: "Threshold for a drawing to be considered NSFW."
    ai_nsfw_flag_threshold_hentai: "Threshold for an image classified as hentai to be considered NSFW."
    ai_nsfw_flag_threshold_porn: "Threshold for an image classified as porn to be considered NSFW."
    ai_nsfw_flag_threshold_sexy: "Threshold for an image classified as sexy to be considered NSFW."
    ai_nsfw_models: "Models to use for NSFW inference."

    ai_openai_gpt35_url: "Custom URL used for GPT 3.5 chat completions. (Azure: MUST support function calling and ideally is a GPT3.5 16K endpoint)"
    ai_openai_gpt4_url: "Custom URL used for GPT 4 chat completions. (for Azure support)"
    ai_openai_embeddings_url: "Custom URL used for the OpenAI embeddings API. (in the case of Azure it can be: https://COMPANY.openai.azure.com/openai/deployments/DEPLOYMENT/embeddings?api-version=2023-05-15)"
    ai_openai_api_key: "API key for OpenAI API"
    ai_anthropic_api_key: "API key for Anthropic API"
    ai_hugging_face_api_url: "Custom URL used for OpenSource LLM inference. Compatible with https://github.com/huggingface/text-generation-inference"

    composer_ai_helper_enabled: "Enable the Composer's AI helper."
    ai_helper_allowed_groups: "Users on these groups will see the AI helper button in the composer."
    ai_helper_allowed_in_pm: "Enable the composer's AI helper in PMs."
    ai_helper_model: "Model to use for the AI helper."

    ai_embeddings_enabled: "Enable the embeddings module."
    ai_embeddings_discourse_service_api_endpoint: "URL where the API is running for the embeddings module"
    ai_embeddings_discourse_service_api_key: "API key for the embeddings API"
    ai_embeddings_model: "Use all-mpnet-base-v2 for local and fast inference in english, text-embedding-ada-002 to use OpenAI API (need API key) and multilingual-e5-large for local multilingual embeddings"
    ai_embeddings_generate_for_pms: "Generate embeddings for personal messages."
    ai_embeddings_semantic_related_topics_enabled: "Use Semantic Search for related topics."
    ai_embeddings_semantic_related_topics: "Maximum number of topics to show in related topic section."
    ai_embeddings_pg_connection_string: "PostgreSQL connection string for the embeddings module. Needs pgvector extension enabled and a series of tables created. See docs for more info."
    ai_embeddings_semantic_search_enabled: "Enable full-page semantic search."
    ai_embeddings_semantic_related_include_closed_topics: "Include closed topics in semantic search results"

    ai_summarization_discourse_service_api_endpoint: "URL where the Discourse summarization API is running."
    ai_summarization_discourse_service_api_key: "API key for the Discourse summarization API."

    ai_bot_enabled: "Enable the AI Bot module."
    ai_bot_allowed_groups: "When the GPT Bot has access to the PM, it will reply to members of these groups."
    ai_bot_enabled_chat_bots: "Available models to act as an AI Bot"
    ai_bot_enabled_chat_commands: "Available GPT integrations used to provide external functionality to the model. Only works with GPT-4 and GPT-3.5"
    ai_helper_add_ai_pm_to_header: "Display a button in the header to start a PM with a AI Bot"

    ai_stability_api_key: "API key for the stability.ai API"
    ai_stability_engine: "Image generation ngine to use for the stability.ai API"
    ai_stability_api_url: "URL for the stability.ai API"

    ai_google_custom_search_api_key: "API key for the Google Custom Search API see: https://developers.google.com/custom-search"
    ai_google_custom_search_cx: "CX for Google Custom Search API"

  reviewables:
      reasons:
        flagged_by_toxicity: The AI plugin flagged this after classifying it as toxic.
        flagged_by_nsfw: The AI plugin flagged this after classifying at least one of the attached images as NSFW.

  errors:
    prompt_message_length: The message %{idx} is over the 1000 character limit.
    invalid_prompt_role: The message %{idx} has an invalid role.

  discourse_ai:
    ai_helper:
      errors:
        completion_request_failed: "Something went wrong while trying to provide suggestions. Please, try again."
      prompts:
        translate: Translate to English
        generate_titles: Suggest topic titles
        proofread: Proofread text
        markdown_table: Generate Markdown table

    ai_bot:
      default_pm_prefix: "[Untitled AI bot PM]"
      topic_not_found: "Summary unavailable, topic not found!"
      command_summary:
        categories: "List categories"
        search: "Search"
        tags: "List tags"
        time: "Time"
        summarize: "Summarize"
        image: "Generate image"
        google: "Search Google"
      command_description:
        time: "Time in %{timezone} is %{time}"
        summarize: "Summarized <a href='%{url}'>%{title}</a>"
        image: "%{prompt}"
        categories:
          one: "Found %{count} category"
          other: "Found %{count} categories"
        tags:
          one: "Found %{count} tag"
          other: "Found %{count} tags"
        search:
          one: "Found %{count} <a href='%{url}'>result</a> for '%{query}'"
          other: "Found %{count} <a href='%{url}'>results</a> for '%{query}'"
        google:
          one: "Found %{count} <a href='%{url}'>result</a> for '%{query}'"
          other: "Found %{count} <a href='%{url}'>results</a> for '%{query}'"

    summarization:
      configuration_hint:
        one: "Configure the `%{setting}` setting first."
        other: "Configure these settings first: %{settings}"
